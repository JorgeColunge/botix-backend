export async function executeBotCode(botCode, context) {
    const {
      newToken,
      sendTextMessage,
      sendImageMessage,
      sendVideoMessage,
      sendDocumentMessage,
      sendAudioMessage,
      sendTemplateMessage,
      sendTemplateToSingleContact,
      sendLocationMessage,
      io,
      senderId,
      messageData,
      conversationId,
      pool,
      axios,
      getContactInfo,
      updateContactName,
      createContact,
      updateContactCompany,
      updateConversationState,
      assignResponsibleUser,
      processMessage,
      getReverseGeocoding,
      getGeocoding,
      integrationDetails,
      externalData,
      clientTimezone,
      moment
    } = context;
  
    try {
      const botFunction = new Function(
        'x-token',
        'sendTextMessage',
        'sendImageMessage',
        'sendVideoMessage',
        'sendDocumentMessage',
        'sendAudioMessage',
        'sendTemplateMessage',
        'sendTemplateToSingleContact',
        'sendLocationMessage',
        'io',
        'senderId',
        'messageData',
        'conversationId',
        'pool',
        'axios',
        'getContactInfo',
        'updateContactName',
        'createContact',
        'updateContactCompany',
        'updateConversationState',
        'assignResponsibleUser',
        'processMessage',
        'getReverseGeocoding',
        'getGeocoding',
        'integrationDetails',
        'externalData',
        'clientTimezone',
        'moment',
        botCode
      );
  
      await botFunction(
        newToken,
        sendTextMessage,
        sendImageMessage,
        sendVideoMessage,
        sendDocumentMessage,
        sendAudioMessage,
        sendTemplateMessage,
        sendTemplateToSingleContact,
        sendLocationMessage,
        io,
        senderId,
        messageData,
        conversationId,
        pool,
        axios,
        getContactInfo,
        updateContactName,
        createContact,
        updateContactCompany,
        updateConversationState,
        assignResponsibleUser,
        processMessage,
        getReverseGeocoding,
        getGeocoding,
        integrationDetails,
        externalData,
        clientTimezone,
        moment
      );
    } catch (error) {
      console.error('Error ejecutando el c√≥digo del bot:', error);
    }
  }